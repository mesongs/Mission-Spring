<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="financial.financialDAO">
	
	<resultMap type="salesReportVO" id="salesReportMap">
		<result column="deal_date" property="dealDate"></result>
		<result column="deal_time" property="dealTime"></result>
		<result column="card_name" property="cardName"></result>
		<result column="approval_amount" property="approvalAmount"></result>
	</resultMap>
	
<!--<insert id="insertTable" parameterType="HashMap" statementType="CALLABLE">
  			{ CALL procedure명 (#{a}, #{b}, #{c}, #{d}) } 
 	</insert> -->
	
  <!-- 여신금융api에 요청한 데이터 insert[배치] -->
  <insert id="salesInsertBatch" parameterType="salesVO">
  	<foreach item="item" index="index" collection="list" separator=" " open="INSERT ALL " close="SELECT * FROM DUAL">
  			into TB_CARD_SALES(
  				   approval_no, 
  				   DEAL_DATE, 
  				   DEAL_TIME, 
  				   CARD_name, 
  				   CARD_NUMBER, 
  				   APPROVAL_AMOUNT, 
  				   INSTALLMENT_PERIOD, 
  				   BUSINESS_NO)
  			values(#{item.approvalNo},
  				   #{item.dealDate},
  				   #{item.dealTime},
  				   #{item.cardName},
  				   #{item.cardNumber},
  				   #{item.approvalAmount},
  				   #{item.installmentPeriod}, 
  				   #{item.businessNo})
  	</foreach>
  </insert>

  	<!-- 세진이가 알려준 것 map으로 받아온 것 insert -->
  	<!-- <foreach collection="paramap" item="map" separator="," open="insert All" close="select * from dual"> 
    into sj_auto_account()
    values(#{map.id},) -->
	
	
	<select id="salesReportResult" parameterType="String" resultType="SalesReportVO" resultMap="salesReportMap">
	   select deal_date, 
       deal_time,
       case
       when to_TIMESTAMP(deal_date||deal_time, 'yy/mm/dd hh24:mi:ss') BETWEEN to_TIMESTAMP(deal_date||' 06:00:01', 'yy/mm/dd hh24:mi:ss') and to_TIMESTAMP(deal_date||' 11:00:00', 'yy/mm/dd hh24:mi:ss') then 'morning,'
       when to_TIMESTAMP(deal_date||deal_time, 'yy/mm/dd hh24:mi:ss') BETWEEN to_TIMESTAMP(deal_date||' 11:00:01', 'yy/mm/dd hh24:mi:ss') and to_TIMESTAMP(deal_date||' 14:00:00', 'yy/mm/dd hh24:mi:ss') then 'AFTERNOON1'
       when to_TIMESTAMP(deal_date||deal_time, 'yy/mm/dd hh24:mi:ss') BETWEEN to_TIMESTAMP(deal_date||' 14:00:01', 'yy/mm/dd hh24:mi:ss') and to_TIMESTAMP(deal_date||' 17:00:00', 'yy/mm/dd hh24:mi:ss') then 'AFTERNOON2'
       when to_TIMESTAMP(deal_date||deal_time, 'yy/mm/dd hh24:mi:ss') BETWEEN to_TIMESTAMP(deal_date||' 17:00:01', 'yy/mm/dd hh24:mi:ss') and to_TIMESTAMP(deal_date||' 23:59:59', 'yy/mm/dd hh24:mi:ss') then 'EVENING'
       end as byTime,
       card_name, 
       visitedCount, 
       customerKind
	   from (SELECT DEAL_DATE, DEAL_TIME, CARD_NAME, CARD_NUMBER, APPROVAL_AMOUNT, BUSINESS_NO, (CARD_NAME||CARD_NUMBER) AS FULLNAME FROM TB_CARD_SALES WHERE DEAL_DATE between 20210715 and 20210716) a,
	   (SELECT (CARD_NAME||CARD_NUMBER) AS FULLNAME, count(*) as visitedCount, DECODE(COUNT(*), 1, '신규고객', '기존고객') AS customerKind FROM TB_CARD_SALES GROUP BY (CARD_NAME||CARD_NUMBER)) b
	   where A.FULLNAME=B.FULLNAME and BUSINESS_NO=#{businessNo}
	   order by deal_date
	</select>
	
	
	<select id="cardApprovalTop5" parameterType="String" resultType="SalesReportVO" resultMap="salesReportMap">
		select card_name, sum(approval_amount) as approval_amount from tb_card_sales
		where deal_date between to_date('2021-07-12', 'yyyy-mm-dd') and to_date('2021-07-16','yyyy-mm-dd')
		and business_no=#{businessNo}
		group by card_name
		order by approval_amount desc
	
	</select>
	
</mapper>